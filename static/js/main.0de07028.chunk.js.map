{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","showHideDetails","toggleEvent","setState","event","this","props","className","summary","start","dateTime","timeZone","location","href","htmlLink","description","onClick","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","ErrorText","placeholder","mockData","kind","etag","status","created","updated","creator","email","self","organizer","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","getAccessToken","a","accessToken","localStorage","getItem","checkToken","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","setItem","tokenCheck","removeItem","searchParams","URLSearchParams","window","search","get","axios","results","authUrl","data","extractLocations","Set","removeQuery","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","startsWith","done","token","url","JSON","stringify","App","eventCount","locationEvents","slice","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.0de07028.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Event extends Component {\r\n\r\n    state = {\r\n        showHideDetails: false\r\n    };\r\n\r\n    toggleEvent = () => {\r\n        this.setState({\r\n            showHideDetails: this.state.showHideDetails === true ? false : true\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { event } = this.props\r\n        return <div className=\"eventCard\">\r\n\r\n            <h1 className=\"eventSummary\">{event.summary}</h1>\r\n\r\n            <p className=\"eventDateTime\">{event.start.dateTime}</p>\r\n\r\n            <p className=\"eventTimeZone\">{event.start.timeZone}</p>\r\n\r\n            <p className=\"eventLocation\">{event.location}</p>\r\n\r\n            {this.state.showHideDetails && (\r\n                <div className='event-details'>\r\n                    <h2>About event:</h2>\r\n                    <a href={event.htmlLink}>See Details on Google Calendar</a>\r\n                    <p className=\"description\">{event.description}</p>\r\n                </div>\r\n            )}\r\n            <button className=\"btn-ShowDetails\" onClick={this.toggleEvent}>\r\n                {!this.state.showHideDetails ? 'Show Details' : 'Hide Details'}\r\n            </button>\r\n\r\n        </div>;\r\n    }\r\n}\r\n\r\nEvent.propTypes = {\r\n    event: PropTypes.shape({\r\n        summary: PropTypes.string.isRequired,\r\n        location: PropTypes.string.isRequired,\r\n        description: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n\r\n    query: '',\r\n    suggestions: [],\r\n    showSuggestions: undefined\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    this.setState({\r\n      query: value,\r\n      suggestions,\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (suggestion) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      showSuggestions: false\r\n    });\r\n    this.props.updateEvents(suggestion);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n        />\r\n        <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion)}\r\n            >{suggestion}</li>\r\n          ))}\r\n          <li onClick={() => this.handleItemClicked(\"all\")}>\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n    state = {\r\n        numberOfEvents: 32,\r\n        ErrorText: \"\"\r\n    }\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n\r\n        this.setState({\r\n            numberOfEvents: value,\r\n            ErrorText: '',\r\n        });\r\n        //shoul I add? this.props.updateEvents('', value);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"numberOfEvents\">\r\n                <p>Number of Events:</p>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"inputNumberOfEvents\"\r\n                    placeholder=\"Enter number of Events\"\r\n                    value={this.state.numberOfEvents}\r\n                    onChange={this.handleInputChanged}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NumberOfEvents","const mockData = [\r\n  {\r\n    kind: \"calendar#event\",\r\n    etag: '\"3181161784712000\"',\r\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    status: \"confirmed\",\r\n    htmlLink:\r\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    created: \"2020-05-19T19:17:46.000Z\",\r\n    updated: \"2020-05-27T12:01:32.356Z\",\r\n    summary: \"Learn JavaScript\",\r\n    description:\r\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    location: \"London, UK\",\r\n    creator: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: \"2020-05-19T16:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    end: {\r\n      dateTime: \"2020-05-19T17:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    originalStartTime: {\r\n      dateTime: \"2020-05-19T16:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: \"default\",\r\n  },\r\n  {\r\n    kind: \"calendar#event\",\r\n    etag: '\"3181159875584000\"',\r\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    status: \"confirmed\",\r\n    htmlLink:\r\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    created: \"2020-05-19T19:14:30.000Z\",\r\n    updated: \"2020-05-27T11:45:37.792Z\",\r\n    summary: \"React is Fun\",\r\n    description:\r\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    location: \"Berlin, Germany\",\r\n    creator: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    organizer: {\r\n      email: \"fullstackwebdev@careerfoundry.com\",\r\n      self: true,\r\n    },\r\n    start: {\r\n      dateTime: \"2020-05-20T14:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    end: {\r\n      dateTime: \"2020-05-20T15:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    originalStartTime: {\r\n      dateTime: \"2020-05-20T14:00:00+02:00\",\r\n      timeZone: \"Europe/Berlin\",\r\n    },\r\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    sequence: 0,\r\n    reminders: {\r\n      useDefault: true,\r\n    },\r\n    eventType: \"default\",\r\n  },\r\n];\r\n\r\nexport { mockData };\r\n\r\n// mockData = JSON.parse(JSON.stringify(mockData));","import axios from 'axios';\r\nimport { mockData } from './mock-data';\r\nimport NProgress from 'nprogress';\r\n/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n\r\n  const checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n      `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n      .then((res) => res.json())\r\n      .catch((error) => error.json());\r\n\r\n    return result;\r\n  };\r\n\r\n  const getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n      'https://g2amwukgja.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n    return access_token;\r\n  };\r\n\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://g2amwukgja.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n\r\n\r\n}\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://g2amwukgja.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};","import React, { Component } from 'react';\nimport './nprogress.css'\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32\n  }\n\n  updateEvents = (location, eventCount) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all')\n        ? events.slice(0, eventCount)\n        : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents.slice(0, eventCount)\n      });\n    });\n  }\n\n  componentDidMount() {\n    const { numberOfEvents } = this.state;\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, numberOfEvents),\n          locations: extractLocations(events),\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEvents={this.updateEvents} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}